# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class GitRaycast < Formula
  desc "Automate git using Raycast AI"
  homepage "https://github.com/jag-k/git-raycast"
  version "0.3.0"
  license "MIT"
  depends_on :macos

  url "https://github.com/jag-k/git-raycast/releases/download/v0.3.0/git-raycast.tar.gz"
  sha256 "a9be019a1adc4fe30da4dc85684e37eaed8e7aaae5c5f79df3668146390f01b2"

  def install
    if build.head?
      system "go", "build", *std_go_args(output: bin/"git-raycast"), "./git-raycast"
    else
      bin.install "git-raycast"
    end

    bash_completion_path = "git-raycast.bash"
    zsh_completion_path = "git-raycast.zsh"
    fish_completion_path = "git-raycast.fish"

    completion_files_missing = []
    completion_files_missing << "bash" unless File.exist?(bash_completion_path)
    completion_files_missing << "zsh" unless File.exist?(zsh_completion_path)
    completion_files_missing << "fish" unless File.exist?(fish_completion_path)

    bash_completion.install bash_completion_path => "git-raycast.bash_completion" if File.exist?(bash_completion_path)
    zsh_completion.install zsh_completion_path => "_git-raycast" if File.exist?(zsh_completion_path)
    fish_completion.install fish_completion_path if File.exist?(fish_completion_path)
  end

  livecheck do
    url :stable
    strategy :github_latest
  end

  head do
    url "https://github.com/jag-k/git-raycast.git", branch: "main"
    depends_on "go" => :build
  end

  test do
    assert_match version.to_s, shell_output("git-raycast --version")
  end
end
